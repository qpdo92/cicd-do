pipeline {
    agent any

    environment {
        MAVEN_HOME = '/usr/share/maven'
    }

    triggers {
        githubPush()
    }

    stages {
        stage('Build') {
            steps {
                sh 'mvn clean compile'
            }
        }

        stage('Test') {
            steps {
                sh 'mvn test'
            }
        }

        stage('Package') {
            steps {
                sh 'mvn package'
            }
        }

        stage('Deploy') {
            when {
                branch 'main'
                echo "Branche actuelle : ${env.GIT_BRANCH}"

            }
            steps {
                echo 'üöÄ D√©ploiement vers EC2...'
                sshagent(['ec2-deploy-key']) {
                    // Transfert du fichier .jar
                    sh 'echo "‚úÖ Bloc sshagent actif, d√©but du transfert..."'
                    stage('Transfert manuel depuis Jenkins') {
           
            sh 'curl -O http://localhost:8080/job/cicd-do/lastSuccessfulBuild/artifact/target/cicd-do-0.0.1-SNAPSHOT.jar'
            sh 'scp -v -o StrictHostKeyChecking=no cicd-do-0.0.1-SNAPSHOT.jar ec2-user@ec2-35-181-114-26.eu-west-3.compute.amazonaws.com:/home/ec2-user/'
        }
    }
}

                  

                    // Red√©marrage du service
                    sh 'ssh -v -o StrictHostKeyChecking=no ec2-user@ec2-35-181-114-26.eu-west-3.compute.amazonaws.com "sudo systemctl restart springboot-app"'
                }
            }
        }

        stage('Test SSH EC2') {
            steps {
                sshagent(['ec2-deploy-key']) {
                    sh 'ssh -o StrictHostKeyChecking=no ec2-user@ec2-35-181-114-26.eu-west-3.compute.amazonaws.com "echo ‚úÖ Connexion SSH OK"'
                }
            }
        }
    }

    post {
        success {
            echo '‚úÖ Build et d√©ploiement r√©ussis ! üéâ'
        }
        failure {
            echo '‚ùå √âchec du pipeline.'
        }
    }
}
